
import urequests as requests
import ujson as json

class TelegramBot(object):

    def __init__(self, token):
        self.token = token
        self.offset = 0
        self._url = 'https://api.telegram.org/bot' + token

    def _quote(self, t):
        return '%'.join('{:02x}'.format(c) for c in t)

    def send(self, chat_id, text):
        url = self._url + '/sendMessage?chat_id=' + str(chat_id) + \
              '&text=%' + self._quote(text.encode('utf-8'))
        #print(url)
        try:
            r = requests.get(url)
            r.close()
            return True
        except:
            return False

    def update(self):
        #url = self._url + '/getUpdates?offset=' + \
        url = self._url + '/getUpdates?offset=' + \
              str(self.offset)
              
        #print(url)
        try:
            r = requests.get(url)
            jo = json.loads(r.text)
            r.close()
            #print('first request')
        except:
            return None

        if len(jo['result']) > 0:

            self.offset = jo['result'][0]['update_id'] + 1
            #print(jo['result'][0]['update_id'])
            
            if 'message' in jo['result'][0]:
                if 'text' in jo['result'][0]['message']:
                    #print('text = ' + str(jo['result'][0]['message']['text']))
                    url = self._url + '/getUpdates?offset=' + str(self.offset)
                    #print('senoud url = ' + url)
                    r = requests.get(url)
                    r.close()
                    #print('second request')
                    return (jo['result'][0]['message']['chat']['id'],
                            str(jo['result'][0]['message']['from']['first_name']),
                            str(jo['result'][0]['message']['text']),
                            jo['result'][0]['message']['date'])
        
        #print('close r')
        return None

    def listen(self, handler):
        w=1
        while True: #w<20:
            message = self.update()
            if message:
                handler(message)
            w+=1



